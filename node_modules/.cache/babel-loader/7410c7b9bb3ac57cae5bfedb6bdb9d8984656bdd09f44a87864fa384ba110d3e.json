{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rudra\\\\Desktop\\\\dashboard\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      // Determine the role of the logged-in user\n      const decodedToken = parseJwt(token);\n      const userRole = decodedToken.role;\n\n      // Redirect to the appropriate page based on the user's role\n      if (userRole === 'manufacturer') {\n        history(`/manufacturer/${decodedToken.email}/messages`);\n      } else if (userRole === 'transporter') {\n        history(`/transporter/${decodedToken.email}/messages`);\n      } else {\n        // Handle other roles or fallback to a default page\n        history('/');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Function to parse the JWT token and extract the role\n  const parseJwt = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"KTGunHXs4/2naXS5yW5vp226myM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nmodule.exports.parseJwt = parseJwt();\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","history","handleLogin","e","preventDefault","response","post","token","data","localStorage","setItem","decodedToken","parseJwt","userRole","role","error","console","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","value","required","_c","module","exports","$RefreshReg$"],"sources":["C:/Users/Rudra/Desktop/dashboard/client/src/components/Login.js"],"sourcesContent":["// Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      const token = response.data.token;\r\n      localStorage.setItem('token', token);\r\n      // Determine the role of the logged-in user\r\n      const decodedToken = parseJwt(token);\r\n      const userRole = decodedToken.role;\r\n     \r\n\r\n      // Redirect to the appropriate page based on the user's role\r\n      if (userRole === 'manufacturer') {\r\n        history(`/manufacturer/${decodedToken.email}/messages`);\r\n      } else if (userRole === 'transporter') {\r\n        history(`/transporter/${decodedToken.email}/messages`);\r\n      } else {\r\n        // Handle other roles or fallback to a default page\r\n        history('/');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Function to parse the JWT token and extract the role\r\n    const parseJwt = (token) => {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(function (c) {\r\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        })\r\n        .join('')\r\n    );\r\n\r\n    return JSON.parse(jsonPayload);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <input type=\"email\" placeholder=\"Email\"  onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nmodule.exports.parseJwt = parseJwt();\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}